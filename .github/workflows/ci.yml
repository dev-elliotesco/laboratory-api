name: CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
        
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
  
      - name: Build with Gradle
        run: ./gradlew build
        
      - name: Run tests with Gradle
        run: ./gradlew test

      - name: Generate Jacoco coverage report
        run: ./gradlew jacocoTestReport
  
      - name: Cache SonarCloud packages
        uses: actions/cache@v4.0.2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
  
      - name: Cache Gradle packages
        uses: actions/cache@v4.0.2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
  
      - name: Build and analyze
        run: ./gradlew build sonar --info

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          scanMetadataReportFile: build/sonar/report-task.txt

  docker:
      name: Build and Push Docker Image
      runs-on: ubuntu-latest
      needs: build
      
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  
      steps:
          - name: Checkout code
            uses: actions/checkout@v4
    
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3.6.1
    
          - name: Build Docker image
            run: docker build -f deployment/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/laboratory-api:latest .
    
          - name: Log in to Docker Hub
            uses: docker/login-action@v3.3.0
            with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}
    
          - name: Push Docker Image
            run: docker push  ${{ secrets.DOCKER_USERNAME }}/laboratory-api:latest


          
